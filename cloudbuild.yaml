timeout: 1200s
substitutions:
  _CUSTOM_REGION: europe-west3-a
  _CUSTOM_CLUSTER: schedulytics

steps:
  # PREPARATION of kubectl and helm
  - name: gcr.io/cloud-builders/kubectl
    id: Configure kubectl
    args:
      - cluster-info
    env:
      - CLOUDSDK_COMPUTE_REGION=$_CUSTOM_REGION
      - CLOUDSDK_CONTAINER_CLUSTER=$_CUSTOM_CLUSTER
      - KUBECONFIG=/workspace/.kube/config

  - name: gcr.io/$PROJECT_ID/helm
    id: Add jetstack repository for cert-manager
    args:
      - repo
      - add
      - jetstack
      - https://charts.jetstack.io
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=true

  - name: gcr.io/$PROJECT_ID/helm
    id: Add traefik repository for traefik
    args:
      - repo
      - add
      - traefik
      - https://containous.github.io/traefik-helm-chart
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=true

  - name: gcr.io/$PROJECT_ID/helm
    id: Add bitnami repository for mongodb
    args:
      - repo
      - add
      - bitnami
      - https://charts.bitnami.com/bitnami
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=true

  - name: gcr.io/$PROJECT_ID/helm
    id: Add stable repository for envoy
    args:
      - repo
      - add
      - stable
      - https://kubernetes-charts.storage.googleapis.com/
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=true

  # Provide secrets
  - name: gcr.io/cloud-builders/gcloud
    id: Acquire secrets from SecretManager
    entrypoint: 'bash'
    args: 
      - '-c'
      - | 
          mkdir secrets
          gcloud secrets versions access latest --secret=schedulytics-environment-ssh > secrets/key.json
          gcloud secrets versions access latest --secret=schedulytics-mongodb-root-password	> secrets/schedulytics-mongodb-root-password
          gcloud secrets versions access latest --secret=schedulytics-mongodb-user-password > secrets/schedulytics-mongodb-user-password
  
  # Templating via Helm
  - name: gcr.io/$PROJECT_ID/helm
    id: Template cert-manager
    args:
      - template
      - cert-manager
      - --namespace cert-manager
      - -f ./bases/cert-manager/values.yaml
      - --version v0.15.1
      - jetstack/cert-manager
      - '> ./bases/cert-manager/helm.yaml'
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=true

  - name: gcr.io/$PROJECT_ID/helm
    id: Template traefik
    args:
      - template
      - traefik
      - --namespace default
      - -f ./bases/traefik/values.yaml
      - traefik/traefik
      - '> ./bases/traefik/helm.yaml'
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=true

  - name: gcr.io/$PROJECT_ID/helm
    id: Template envoy
    args:
      - template
      - envoy
      - --namespace default
      - -f ./bases/envoy/values.yaml
      - stable/envoy
      - '> ./bases/envoy/helm.yaml'
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=true

  - name: gcr.io/$PROJECT_ID/helm
    id: Template mongodb
    args:
      - template
      - mongodb
      - --namespace default
      - -f ./bases/mongodb/values.yaml
      - bitnami/mongodb
      - '> ./bases/mongodb/helm.yaml'
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=true

  - name: gcr.io/$PROJECT_ID/helm
    id: Template schedulytics-frontend
    args:
      - template
      - schedulytics-frontend
      - --namespace default
      - -f ./bases/schedulytics-frontend/values.yaml
      - ./bases/schedulytics-frontend
      - '> ./bases/schedulytics-frontend/helm.yaml'
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=true

  - name: gcr.io/$PROJECT_ID/helm
    id: Template schedulytics-grpc-server
    args:
      - template
      - schedulytics-grpc-server
      - --namespace default
      - -f ./bases/schedulytics-grpc-server/values.yaml
      - ./bases/schedulytics-grpc-server
      - '> ./bases/schedulytics-grpc-server/helm.yaml'
    env:
      - KUBECONFIG=/workspace/.kube/config
      - TILLERLESS=true

  # DEPLOY via kustomize
  - id: Deploy PROD configuration via Kustomize
    name: 'gcr.io/$PROJECT_ID/kustomize'
    args:
    - build
    - overlays/prod
    env:
      - APPLY=true
      - KUBECONFIG=/workspace/.kube/config